<?php

declare(strict_types=1);

namespace Doctrine\DBAL\Types;

use RuntimeException;
use Doctrine\DBAL\Platforms\AbstractPlatform;

/**
 * @template TPhpValue
 * @template TDatabaseValue
 * @template TOptions of array<string, mixed>
 */
abstract class Type
{
    /**
     * @psalm-param TOptions $column
     * @psalm-return string
     */
    public function getSQLDeclaration(array $column, AbstractPlatform $platform)
    {
        throw new RuntimeException('???');
    }

    /**
     * @psalm-param null|TPhpValue $value
     * @psalm-return null|TDatabaseValue
     */
    public function convertToDatabaseValue($value, AbstractPlatform $platform)
    {
        throw new RuntimeException('???');
    }

    /**
     * @psalm-param null|TDatabaseValue $value
     * @psalm-return null|TPhpValue
     */
    public function convertToPHPValue($value, AbstractPlatform $platform)
    {
        throw new RuntimeException('???');
    }
}
